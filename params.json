{
  "name": "Agora",
  "tagline": "",
  "body": "# Agora :: Nibodha's Integration Platform#\r\nAgora provides a platform to build different backend services.\r\n\r\n\r\n## Prerequisites ##\r\n* JDK 1.8\r\n* Maven 3.3\r\n\r\n## Technology Stack ##\r\n\r\n\r\n* Spring Framework 4.2.3.RELEASE\r\n* Spring Boot 1.3.0.RELEASE\r\n* Spring Batch 3.0.5.RELEASE\r\n* Apache Camel 2.16.1\r\n* Spring Data 1.11.1.RELEASE\r\n* Infinispan 8.1.2\r\n* Apache Active MQ 5.6\r\n* HikariCP 2.4.3\r\n\r\n## Architecture ##\r\n\r\n Nibodha Integration Platform(NIP) has a layered architecture that consists of\r\n \r\n* Kernel Layer\r\n* Services layer\r\n* Application Layer \r\n\r\n![](agora-architecture.png)\r\n\r\n### Kernel Layer ###\r\n\r\nThe agora kernel layer is based on Spring Boot that provides an embedded Jetty Servlet Container into which we can deploy the applications. The kernel layer provides the following features:\r\n\r\n#### Deployment ####\r\nThe agora provides support to deploy services external to the bundled application, so the customer/deployer can decide which service is being deployed on which server.\r\n\r\n#### Logging ####\r\nA dynamic logging component which is based on logback and supports different APIs like SLF4J, Java Logging etc.\r\n\r\n#### JMX Server ####\r\nThe agora uses jolokia agent to provide restful access to the MBeans, so that the any mbean client can connect to the server.\r\n\r\n#### Configuration ####\r\nThe properties files for configuration are monitored and the changes are automatically propagated to the relevent services/applications\r\n\r\n#### Security ####\r\nThe security framework is based on spring security.\r\n\r\n### Services Layer ###\r\n\r\nThe agora services layer consists of embedded services which interact with the application layer to communicate with the applications built on top of the NIP. The services layer provides:\r\n\r\n#### Transaction Manager ####\r\n\r\nTODO: Tool choice for XA transaction manager (JBoss TS/Atomikos/Bitronix)\r\n\r\n#### Messaging ####\r\n\r\nThe messaging service is based on Apache Active MQ which allows the developer to create JMS Message Brokers and clients and deploy them.\r\n\r\n#### Routing/Integration engine ####\r\n\r\nThe routing/integration engine based on Apache Camel allows the developer to define routes and implement enterprise integration patterns(EIP) and deploy the routes into the camel context.\r\n            \r\n#### Transformation Engine ####\r\n\r\nThe transformation engine is a custom bean mapping framework.\r\n\r\n#### Auditing ####\r\n\r\nThe auditing service logs the inbound and outbound messages to an audit log file.\r\n\r\n#### ETL Engine ####\r\n\r\nThe ETL engine is realized using Spring Batch, and is used extract transform and load from/to different datasources.\r\n\r\n### Application Layer ###\r\n\r\nTODO: Add Info\r\n\r\n## Road Map ##\r\n\r\nTODO: Add Info\r\n\r\n## Project Structure ##\r\n\r\nThe integration platform is a multi module maven project with the following modules\r\n\r\n* core - provides the implementation for the services and kernel layers in the architecture layers.\r\n* launcher - provides services to launch the integration platform\r\n* configuration -  contains the platform configuration files\r\n\r\n## Platform Configuration Properties List and default values ##\r\n\r\n### MQ Configuration ###\r\n\r\n        platform.mq.broker-url=tcp://localhost:61616\r\n        platform.mq.data-dir=${user.home}/mq-data\r\n        platform.mq.enabled=false\r\n        platform.mq.password=\r\n        platform.mq.user-name=\r\n    \r\n### Datasource Configuration ###\r\n    \r\n\t    platform.jdbc.datasource.enabled=false\r\n        platform.jdbc.datasource.names=<comma separated ds names> \r\n        platform.jdbc.datasource.default.cache-prep-stmts=true\r\n        platform.jdbc.datasource.default.idle-timeout=30000\r\n\r\n        platform.jdbc.datasource.default.max-life-time=30000\r\n        platform.jdbc.datasource.default.maximum-pool-size=5\r\n        platform.jdbc.datasource.default.prep-stmt-cache-size=250\r\n        platform.jdbc.datasource.default.prep-stmt-cache-sql-limit=2048\r\n        platform.jdbc.datasource.default.use-server-prep-stmts=true\r\n        \r\n        platform.jdbc.datasource.<dsname>.password=\r\n        platform.jdbc.datasource.<dsname>.jdbc-url=\r\n        platform.jdbc.datasource.<dsname>.user-name=\r\n     \r\n### Cache Configuration ###\r\n        \r\n        platform.cache.enabled=true\r\n        platform.cache.config=\r\n        \r\n\r\n\r\n\r\n## License ##\r\n\r\nThe Nibodha's Integration Platform Agora is released under version 2.0 of the [Apache License](http://www.apache.org/licenses/LICENSE-2.0)\r\n\r\n## FAQs ##\r\n\r\n### 1. How to set up development environment? ###\r\n\r\n\ta. Fork the integration-platform project to the developers gitlab account.\r\n\t\r\n\tb. Clone the integration platform projects to developer's machine.\r\n\t\r\n\tc. copy the settings.xml from configuration/etc folder to the maven local repository folder usually <user.home>/.m2\r\n\t\r\n\tFor windows C:\\users\\<username>\\.m2\r\n\tFor linux/mac ~/.m2\r\n\r\n### 2. How to build and run the platform? ###\r\n   \r\n   Execute the following commands in terminal/command prompt\r\n   \r\n   Build the integration-platform\r\n   \r\n   `mvn clean install`\r\n   \r\n   Change to launcher directory\r\n   \r\n   `cd launcher`\r\n   \r\n   Start the integration platform\r\n   \r\n   `mvn spring-boot:run`\r\n   \r\n\t\r\n### 3. How to add datasource? ###\r\n\t\r\n\tChange the property\r\n\t \r\n\t  \tplatform.jdbc.datasource.enabled=true\r\n\t\r\n\tAdd datasource names\r\n\t\r\n\t\tplatform.jdbc.datasource.names=ds1\r\n\t\t\r\n\tIf more than one datasource needs to be added, add comma separated ds names.\r\n\t\r\n\tAdd jdbc url, user name, password properties for the datasource\r\n\t\r\n\t\t platform.jdbc.datasource.ds1.jdbc-url=jdbc:oracle:thin:@localhost:1521:orcl\r\n        platform.jdbc.datasource.ds1.user-name=scott\r\n        platform.jdbc.datasource.ds1.password=tiger\r\n    \r\n   The default values are taken for the other properities mentioned, if property need to be specified for a specific datasource replace \"default\" with datasource name.   \r\n\t\t\t\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}
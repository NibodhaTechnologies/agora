<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.0.RELEASE</version>
    </parent>
    <groupId>com.nibodha.ip</groupId>
    <artifactId>integration-platform</artifactId>
    <version>1.2-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Integration Platform</name>
    <organization>
        <name>Nibodha Technologies Pvt. Ltd.</name>
        <url>http://www.nibodha.com/</url>
    </organization>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <default.encoding>UTF-8</default.encoding>
        <java.version>1.8</java.version>
        <sonar.java.source>${java.version}</sonar.java.source>
        <javax.transaction.version>1.1</javax.transaction.version>
        <logback.version>1.1.3</logback.version>
        <spring.boot.admin.version>1.3.0</spring.boot.admin.version>
        <spring-batch-admin.version>1.3.1.RELEASE</spring-batch-admin.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <camel.version>2.16.1</camel.version>
        <spring-data-mongodb.version>1.8.1.RELEASE</spring-data-mongodb.version>
        <javassist.version>3.20.0-GA</javassist.version>
        <xstream.version>1.4.8</xstream.version>
        <commons-collections4.version>4.1</commons-collections4.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <commons-compress.version>1.10</commons-compress.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <commons-io.version>2.4</commons-io.version>
        <pentaho-kettle.version>6.1.0.0-99</pentaho-kettle.version>
        <hibernate.version>5.0.5.Final</hibernate.version>
        <hibernate-maven-plugin.version>2.2</hibernate-maven-plugin.version>
        <cglib.version>2.1_3</cglib.version>
        <jetty.version>9.3.6.v20151106</jetty.version>
        <oracle-ojdbc.version>11.2.0.3</oracle-ojdbc.version>
        <activemq.version>5.13.0</activemq.version>
        <joda-time.version>2.9.1</joda-time.version>
        <cxf.version>3.1.4</cxf.version>
        <hibernate.ogm-version>4.2.0.Final</hibernate.ogm-version>
        <hibernate-validator.version>5.2.3.Final</hibernate-validator.version>
        <hibernate-validator-legacy.version>4.0.2.GA</hibernate-validator-legacy.version>
        <trimm.version>1.0.0</trimm.version>
        <hikariCP.verion>2.4.3</hikariCP.verion>
    </properties>
    <developers>
        <developer>
            <id>gibu.george</id>
            <name>Gibu George</name>
        </developer>
    </developers>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>javax.transaction</groupId>
                <artifactId>jta</artifactId>
                <version>${javax.transaction.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-admin-manager</artifactId>
                <version>${spring-batch-admin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-core</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-cxf</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-spring-batch</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-mongodb</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-mongodb</artifactId>
                <version>${spring-data-mongodb.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-ftp</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-quartz2</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-jsonpath</artifactId>
                <version>${camel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>
            <dependency>
                <groupId>pentaho-kettle</groupId>
                <artifactId>kettle-core</artifactId>
                <version>${pentaho-kettle.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-collections</artifactId>
                        <groupId>commons-collections</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>pentaho-kettle</groupId>
                <artifactId>kettle-engine</artifactId>
                <version>${pentaho-kettle.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-collections</artifactId>
                        <groupId>commons-collections</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <!-- CXF dependencies-->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http-jetty</artifactId>
                <version>${cxf.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-jndi</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <!-- the ActiveMQ client with connection pooling -->
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-client</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-camel</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-pool</artifactId>
                <version>${activemq.version}</version>
            </dependency>

            <!-- the ActiveMQ broker is optional and can be removed if connecting to a remote broker only -->
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-broker</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-spring</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-kahadb-store</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <!-- Unit test dependencies-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-test</artifactId>
                <version>${camel.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-test-spring</artifactId>
                <version>${camel.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate.ogm</groupId>
                <artifactId>hibernate-ogm-infinispan</artifactId>
                <version>${hibernate.ogm-version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-core</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <dependency>
                <groupId>dk.tigerteam</groupId>
                <artifactId>TrimmCore</artifactId>
                <version>${trimm.version}</version>
            </dependency>

            <dependency>
                <groupId>dk.tigerteam</groupId>
                <artifactId>TrimmJpa</artifactId>
                <version>${trimm.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator-legacy</artifactId>
                <version>${hibernate-validator-legacy.version}</version>
            </dependency>
            <dependency>
                <groupId>dk.tigerteam</groupId>
                <artifactId>TrimmPersistence</artifactId>
                <version>${trimm.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikariCP.verion}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <modules>
        <module>test-support</module>
        <module>core</module>
        <module>launcher</module>
        <module>configuration</module>
        <module>monitoring-console</module>
        <module>dist</module>
    </modules>
    <distributionManagement>
        <repository>
            <id>release.ntpl-appsvr1.nibodha.local</id>
            <name>release.ntpl-appsvr1.nibodha.local-releases</name>
            <url>http://ntpl-appsvr1:8081/artifactory/ext-release-local</url>
        </repository>
        <snapshotRepository>
            <id>snapshots.ntpl-appsvr1.nibodha.local</id>
            <name>snapshots.ntpl-appsvr1.nibodha.local-releases</name>
            <url>http://ntpl-appsvr1:8081/artifactory/libs-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>
    <scm>
        <developerConnection>scm:git:git://gitlab.nibodha.local/nibodha</developerConnection>
    </scm>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <compilerId>javac-with-errorprone</compilerId>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-compiler-javac-errorprone</artifactId>
                        <version>2.5</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.5.201505241946</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    <profiles>
        <profile>
            <id>mutationcoverage</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-maven</artifactId>
                        <version>1.1.8</version>
                        <configuration>
                            <outputFormats>
                                <outputFormat>XML</outputFormat>
                                <outputFormat>HTML</outputFormat>
                            </outputFormats>
                            <timestampedReports>false</timestampedReports>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>mutationCoverage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <!-- TODO: Remove this once artifactory is fixed -->
    <repositories>
        <repository>
            <id>tigerteam-maven2-repository</id>
            <name>tigerteam.dk Repository for Maven 2</name>
            <url>http://www.tigerteam.dk/maven2/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>tigerteam-maven2-repository</id>
            <name>tigerteam.dk Repository for Maven 2</name>
            <url>http://www.tigerteam.dk/maven2/</url>
        </pluginRepository>
    </pluginRepositories>

</project>
